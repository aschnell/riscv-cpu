library ieee;
use ieee.std_logic_1164.all;
use std.env.finish;
use work.probe.all;

entity tmp is
end;

architecture testbench of tmp is

  signal clk:   std_ulogic;
  signal reset: std_ulogic;

begin

  probe_fake <= '1';

$setup

$asm

  dut: entity work.soc port map(clk, reset);

  process is
  begin
    reset <= '1';
    wait for 75 ns;
    reset <= '0';
    wait;
  end process;

  process is
  begin

    loop
      clk <= '1';
      wait for 50 ns;
      clk <= '0';
      wait for 50 ns;

      report "instr:" & to_hstring(probe_out_instr);
      exit when probe_out_instr = x"0100000F"; -- pause
      if now > 10000 ns then
        report "infinite loop (?)" severity failure;
      end if;
    end loop;

    report "x1:" & to_hstring(probe_out_x1);
    report "x2:" & to_hstring(probe_out_x2);
    report "x3:" & to_hstring(probe_out_x3);

    report "dmem0:" & to_hstring(probe_out_dmem0);
    report "dmem1:" & to_hstring(probe_out_dmem1);
    report "dmem2:" & to_hstring(probe_out_dmem2);
    report "dmem3:" & to_hstring(probe_out_dmem3);

$check

    report "test succeeded";
    finish;

  end process;

end architecture testbench;
